{"ast":null,"code":"var _jsxFileName = \"/Users/Tim/Desktop/Code/iss-tracker/src/containers/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MapContainer, TileLayer, Marker, Circle } from 'react-leaflet';\nimport issIcon from '../components/issIcon';\n\n/*const getData = async() => {\n          await fetch(\"http://api.open-notify.org/iss-now.json\")\n          await resp.json(resp)\n          var lat = Response['iss_position']['latitude'];\n          var lon = Response['iss_position']['longitude'];\n          console.log(lat,lon);\n      \n          map.setView([lat,lon])\n          marker.setLatLng([lat,lon]);\n          circle.setLatLng([lat,lon]);\n          setInterval(getData(), 5000);\n      } \n      getData();*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    setInterval(() => {\n      getLocation();\n    }, 5000);\n  }, []);\n  setInterval(() => {}, 5000);\n  const getLocation = async () => {\n    await fetch(\"http://api.open-notify.org/iss-now.json\").then(response => response.json()).then(data => {\n      setLongitude(data.iss_position.longitude);\n      setLatitude(data.iss_position.latitude);\n    });\n  };\n  const [longitude, setLongitude] = useState(-0.09);\n  const [latitude, setLatitude] = useState(51.505);\n  console.log(longitude, latitude);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"ISS Tracker\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: {\n        lng: longitude,\n        lat: latitude\n      },\n      zoom: 6,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        center: {\n          lng: longitude,\n          lat: latitude\n        },\n        radius: 80000,\n        color: 'red',\n        opacity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lng: longitude,\n          lat: latitude\n        },\n        icon: issIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"INwTbKUPplWugOWifqy0zLDRkMU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Circle","issIcon","App","setInterval","getLocation","fetch","then","response","json","data","setLongitude","iss_position","longitude","setLatitude","latitude","console","log","lng","lat"],"sources":["/Users/Tim/Desktop/Code/iss-tracker/src/containers/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MapContainer, TileLayer, Marker, Circle } from 'react-leaflet';\nimport issIcon from '../components/issIcon';\n\n/*const getData = async() => {\n          await fetch(\"http://api.open-notify.org/iss-now.json\")\n          await resp.json(resp)\n          var lat = Response['iss_position']['latitude'];\n          var lon = Response['iss_position']['longitude'];\n          console.log(lat,lon);\n      \n          map.setView([lat,lon])\n          marker.setLatLng([lat,lon]);\n          circle.setLatLng([lat,lon]);\n          setInterval(getData(), 5000);\n      } \n      getData();*/\n\nfunction App() {\n  \n\nuseEffect(() => {\n  setInterval(() => {\n    getLocation()\n  }, 5000);\n}, []);\n\nsetInterval(() => {\n\n}, 5000);\n\nconst getLocation = async () => {\n  await fetch(\"http://api.open-notify.org/iss-now.json\")\n    .then((response) => response.json())\n         .then((data) => {\n            setLongitude(data.iss_position.longitude);\n            setLatitude(data.iss_position.latitude);\n    })\n  }\n  const [longitude, setLongitude] = useState(-0.09);\n  const [latitude, setLatitude] = useState(51.505);\n  console.log(longitude,latitude);\n\n  return (\n      <header className=\"ISS Tracker\">\n        <MapContainer center={{lng:longitude, lat:latitude}} zoom={6} scrollWheelZoom={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Circle center={{lng:longitude, lat:latitude}} radius={80000} color={'red'} opacity={0.3}/>\n          <Marker position={{lng:longitude, lat:latitude}} icon={issIcon()}>\n          </Marker>\n        </MapContainer>\n\n      </header>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,QAAQ,eAAe;AACvE,OAAOC,OAAO,MAAM,uBAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA,SAASC,GAAG,GAAG;EAAA;EAGfN,SAAS,CAAC,MAAM;IACdO,WAAW,CAAC,MAAM;MAChBC,WAAW,EAAE;IACf,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEND,WAAW,CAAC,MAAM,CAElB,CAAC,EAAE,IAAI,CAAC;EAER,MAAMC,WAAW,GAAG,YAAY;IAC9B,MAAMC,KAAK,CAAC,yCAAyC,CAAC,CACnDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAC9BF,IAAI,CAAEG,IAAI,IAAK;MACbC,YAAY,CAACD,IAAI,CAACE,YAAY,CAACC,SAAS,CAAC;MACzCC,WAAW,CAACJ,IAAI,CAACE,YAAY,CAACG,QAAQ,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;EACD,MAAM,CAACF,SAAS,EAAEF,YAAY,CAAC,GAAGf,QAAQ,CAAC,CAAC,IAAI,CAAC;EACjD,MAAM,CAACmB,QAAQ,EAAED,WAAW,CAAC,GAAGlB,QAAQ,CAAC,MAAM,CAAC;EAChDoB,OAAO,CAACC,GAAG,CAACJ,SAAS,EAACE,QAAQ,CAAC;EAE/B,oBACI;IAAQ,SAAS,EAAC,aAAa;IAAA,uBAC7B,QAAC,YAAY;MAAC,MAAM,EAAE;QAACG,GAAG,EAACL,SAAS;QAAEM,GAAG,EAACJ;MAAQ,CAAE;MAAC,IAAI,EAAE,CAAE;MAAC,eAAe,EAAE,IAAK;MAAA,wBAClF,QAAC,SAAS;QACR,WAAW,EAAC,yFAAyF;QACrG,GAAG,EAAC;MAAoD;QAAA;QAAA;QAAA;MAAA,QACxD,eACF,QAAC,MAAM;QAAC,MAAM,EAAE;UAACG,GAAG,EAACL,SAAS;UAAEM,GAAG,EAACJ;QAAQ,CAAE;QAAC,MAAM,EAAE,KAAM;QAAC,KAAK,EAAE,KAAM;QAAC,OAAO,EAAE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE,eAC3F,QAAC,MAAM;QAAC,QAAQ,EAAE;UAACG,GAAG,EAACL,SAAS;UAAEM,GAAG,EAACJ;QAAQ,CAAE;QAAC,IAAI,EAAEb,OAAO;MAAG;QAAA;QAAA;QAAA;MAAA,QACxD;IAAA;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QAER;AAEf;AAAC,GAvCQC,GAAG;AAAA,KAAHA,GAAG;AAyCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}