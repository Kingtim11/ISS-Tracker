{"ast":null,"code":"var _jsxFileName = \"/Users/Tim/Desktop/Code/iss-tracker/src/containers/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MapContainer, TileLayer, Marker, Circle, useMap, useMapEvent } from 'react-leaflet';\nimport issIcon from '../components/issIcon';\n\n/*const getData = async() => {\n          await fetch(\"http://api.open-notify.org/iss-now.json\")\n          await resp.json(resp)\n          var lat = Response['iss_position']['latitude'];\n          var lon = Response['iss_position']['longitude'];\n          console.log(lat,lon);\n      \n          map.setView([lat,lon])\n          marker.setLatLng([lat,lon]);\n          circle.setLatLng([lat,lon]);\n          setInterval(getData(), 5000);\n      } \n      getData();*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [longitude, setLongitude] = useState(-0.09);\n  const [latitude, setLatitude] = useState(51.505);\n  //console.log(longitude,latitude);\n\n  useEffect(() => {\n    setInterval(() => {\n      getLocation();\n    }, 5000);\n  }, []);\n  const getLocation = async () => {\n    await fetch(\"http://api.open-notify.org/iss-now.json\").then(response => response.json()).then(data => {\n      setLongitude(data.iss_position.longitude);\n      setLatitude(data.iss_position.latitude);\n    });\n  };\n  const map = useMap(() => {\n    map.setCenter({\n      lng: longitude,\n      lat: latitude\n    });\n    console.log('map center:', map.getCenter());\n  });\n\n  /*function centerMap() {\n    const map = useMap()\n    console.log('map center:', map.getCenter())\n  }*/\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"ISS Tracker\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: {\n        lng: longitude,\n        lat: latitude\n      },\n      zoom: 6,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        center: {\n          lng: longitude,\n          lat: latitude\n        },\n        radius: 80000,\n        color: 'red',\n        opacity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lng: longitude,\n          lat: latitude\n        },\n        icon: issIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"map\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"51MoxfQECNmusTaDuJS8GZnnB3k=\", false, function () {\n  return [useMap];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Circle","useMap","useMapEvent","issIcon","App","longitude","setLongitude","latitude","setLatitude","setInterval","getLocation","fetch","then","response","json","data","iss_position","map","setCenter","lng","lat","console","log","getCenter"],"sources":["/Users/Tim/Desktop/Code/iss-tracker/src/containers/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { MapContainer, TileLayer, Marker, Circle, useMap, useMapEvent } from 'react-leaflet';\nimport issIcon from '../components/issIcon';\n\n/*const getData = async() => {\n          await fetch(\"http://api.open-notify.org/iss-now.json\")\n          await resp.json(resp)\n          var lat = Response['iss_position']['latitude'];\n          var lon = Response['iss_position']['longitude'];\n          console.log(lat,lon);\n      \n          map.setView([lat,lon])\n          marker.setLatLng([lat,lon]);\n          circle.setLatLng([lat,lon]);\n          setInterval(getData(), 5000);\n      } \n      getData();*/\n\nfunction App() {\n  const [longitude, setLongitude] = useState(-0.09);\n  const [latitude, setLatitude] = useState(51.505);\n  //console.log(longitude,latitude);\n\n  useEffect(() => {\n    setInterval(() => {\n      getLocation()\n    }, 5000);\n  }, []);\n\n  const getLocation = async () => {\n    await fetch(\"http://api.open-notify.org/iss-now.json\")\n      .then((response) => response.json())\n          .then((data) => {\n              setLongitude(data.iss_position.longitude);\n              setLatitude(data.iss_position.latitude);\n      })\n    }\n    const map = useMap(() => {\n      map.setCenter({lng: longitude, lat: latitude})\n      console.log('map center:', map.getCenter())\n    }) \n\n  /*function centerMap() {\n    const map = useMap()\n    console.log('map center:', map.getCenter())\n  }*/\n\n  return (\n      <header className=\"ISS Tracker\">\n        <MapContainer center={{lng: longitude, lat: latitude}} zoom={6} scrollWheelZoom={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Circle center={{lng:longitude, lat:latitude}} radius={80000} color={'red'} opacity={0.3}/>\n          <Marker position={{lng:longitude, lat:latitude}} icon={issIcon()}/>\n          <map />\n        </MapContainer>\n\n      </header>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,WAAW,QAAQ,eAAe;AAC5F,OAAOC,OAAO,MAAM,uBAAuB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,IAAI,CAAC;EACjD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EAChD;;EAEAC,SAAS,CAAC,MAAM;IACda,WAAW,CAAC,MAAM;MAChBC,WAAW,EAAE;IACf,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,WAAW,GAAG,YAAY;IAC9B,MAAMC,KAAK,CAAC,yCAAyC,CAAC,CACnDC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAC/BF,IAAI,CAAEG,IAAI,IAAK;MACZT,YAAY,CAACS,IAAI,CAACC,YAAY,CAACX,SAAS,CAAC;MACzCG,WAAW,CAACO,IAAI,CAACC,YAAY,CAACT,QAAQ,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;EACD,MAAMU,GAAG,GAAGhB,MAAM,CAAC,MAAM;IACvBgB,GAAG,CAACC,SAAS,CAAC;MAACC,GAAG,EAAEd,SAAS;MAAEe,GAAG,EAAEb;IAAQ,CAAC,CAAC;IAC9Cc,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEL,GAAG,CAACM,SAAS,EAAE,CAAC;EAC7C,CAAC,CAAC;;EAEJ;AACF;AACA;AACA;;EAEE,oBACI;IAAQ,SAAS,EAAC,aAAa;IAAA,uBAC7B,QAAC,YAAY;MAAC,MAAM,EAAE;QAACJ,GAAG,EAAEd,SAAS;QAAEe,GAAG,EAAEb;MAAQ,CAAE;MAAC,IAAI,EAAE,CAAE;MAAC,eAAe,EAAE,IAAK;MAAA,wBACpF,QAAC,SAAS;QACR,WAAW,EAAC,yFAAyF;QACrG,GAAG,EAAC;MAAoD;QAAA;QAAA;QAAA;MAAA,QACxD,eACF,QAAC,MAAM;QAAC,MAAM,EAAE;UAACY,GAAG,EAACd,SAAS;UAAEe,GAAG,EAACb;QAAQ,CAAE;QAAC,MAAM,EAAE,KAAM;QAAC,KAAK,EAAE,KAAM;QAAC,OAAO,EAAE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE,eAC3F,QAAC,MAAM;QAAC,QAAQ,EAAE;UAACY,GAAG,EAACd,SAAS;UAAEe,GAAG,EAACb;QAAQ,CAAE;QAAC,IAAI,EAAEJ,OAAO;MAAG;QAAA;QAAA;QAAA;MAAA,QAAE,eACnE;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EACM;IAAA;IAAA;IAAA;EAAA,QAER;AAEf;AAAC,GA3CQC,GAAG;EAAA,QAmBIH,MAAM;AAAA;AAAA,KAnBbG,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}